// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package db

import (
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Copywriting struct {
	ID        int64            `json:"id"`
	Source    string           `json:"source"`
	Title     string           `json:"title"`
	Content   string           `json:"content"`
	Date      pgtype.Timestamp `json:"date"`
	CreatedAt time.Time        `json:"created_at"`
	DeleteAt  pgtype.Timestamp `json:"delete_at"`
}

type Oauth2Token struct {
	ID           int64            `json:"id"`
	UserID       int64            `json:"user_id"`
	Provider     string           `json:"provider"`
	Api          string           `json:"api"`
	AccessToken  string           `json:"access_token"`
	TokenType    string           `json:"token_type"`
	RefreshToken string           `json:"refresh_token"`
	Expiry       time.Time        `json:"expiry"`
	CreatedAt    time.Time        `json:"created_at"`
	DeleteAt     pgtype.Timestamp `json:"delete_at"`
}

type Platform struct {
	ID        int64            `json:"id"`
	Platform  string           `json:"platform"`
	Detail    string           `json:"detail"`
	CreatedAt time.Time        `json:"created_at"`
	DeleteAt  pgtype.Timestamp `json:"delete_at"`
}

type Session struct {
	ID           uuid.UUID `json:"id"`
	UserID       int64     `json:"user_id"`
	RefreshToken string    `json:"refresh_token"`
	UserAgent    string    `json:"user_agent"`
	ClientIp     string    `json:"client_ip"`
	IsBlocked    bool      `json:"is_blocked"`
	ExpiresAt    time.Time `json:"expires_at"`
	CreatedAt    time.Time `json:"created_at"`
}

type ThirdKey struct {
	ID        int64            `json:"id"`
	Name      string           `json:"name"`
	Ak        string           `json:"ak"`
	Sk        string           `json:"sk"`
	CreatedAt time.Time        `json:"created_at"`
	DeleteAt  pgtype.Timestamp `json:"delete_at"`
}

type User struct {
	ID             int64     `json:"id"`
	Username       string    `json:"username"`
	HashedPassword string    `json:"hashed_password"`
	Email          string    `json:"email"`
	CreatedAt      time.Time `json:"created_at"`
}

type Video struct {
	ID        int64            `json:"id"`
	Title     string           `json:"title"`
	Url       string           `json:"url"`
	Duration  int32            `json:"duration"`
	UserID    int64            `json:"user_id"`
	Subscribe int64            `json:"subscribe"`
	CreatedAt time.Time        `json:"created_at"`
	DeleteAt  pgtype.Timestamp `json:"delete_at"`
}
